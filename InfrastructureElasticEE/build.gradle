plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id "cgoit.gradle.elasticsearch" version "0.2.3"
}
dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:14.3.7"
    }
}

dependencies {
    implementation project(":Model")
    if (reactFrontend.toBoolean()) {
        implementation project(":ClientReact")
        implementation('org.springframework.boot:spring-boot-starter-web')
    }
    if (vaadinFrontend.toBoolean()) {
        implementation('com.vaadin:vaadin-spring-boot-starter')
        implementation project(":ClientVaadin")
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'
    compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.13.2'
    compile 'org.elasticsearch.client:elasticsearch-rest-client:7.13.2'
    compile 'org.elasticsearch:elasticsearch:7.13.2'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
}
repositories {
    maven {
        url "https://snapshots.elastic.co/maven/"
    }
}
defaultTasks('Elastic')

tasks.register('Elastic'){
    doFirst {
        startElasticsearch {
            elasticsearchVersion = "7.8.0"
            httpScheme = "http"
            httpHost = "localhost"
            httpPort = 9200
            transportPort = 9300
            dataDir = file("$buildDir/elastic")
            logsDir = file("$buildDir/elastic/logs")
            forceShutdownBeforeStart = false
        }
    }

//    doLast {
//        stopElasticsearch {
//            httpScheme = "http"
//            httpHost = "localhost"
//            httpPort = 9200
//        }
//    }
}